name: Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
        os: [ "ubuntu-latest", "ubuntu-18.04", "macos-latest", "windows-latest" ]

    steps:
      - uses: actions/checkout@v3.0.2

      - uses: actions/cache@v3.0.5
        with:
          path: |
            ${{ github.workspace }}/.venv
          key: ${{ runner.os }}-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-${{ matrix.python-version }}
            ${{ runner.os }}-${{ matrix.os }}-
            ${{ runner.os }}-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - uses: Gr1N/setup-poetry@v7

      - name: Install dependencies
        run: |
          poetry install
          poetry run pip install --upgrade tornado --ignore-installed || true

      - name: Test
        shell: bash
        run: |
          poetry run pytest tests/ -s --cov=portray/ --cov-report=term-missing ${@-}
          poetry run coverage xml

      - name: Report Coverage
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
        uses: codecov/codecov-action@v3.1.0
